#!/usr/bin/env bash
set -euo pipefail

OUTPUT="/etc/hosts.generated"
DEBUG_TMP=false

LOCAL_IP=$(ip -4 addr show scope global | awk '/inet / && $2 !~ /^100\./ && $2 !~ /^127\./ {split($2, a, "/"); print a[1]; exit}')
SUBNET=$(echo "$LOCAL_IP" | awk -F. '{print $1"."$2"."$3".0/24"}')
IFACE=$(ip route get 8.8.8.8 | awk '{print $5; exit}')

echo "[*] Local IP: $LOCAL_IP"
echo "[*] Scanning subnet: $SUBNET on interface $IFACE"

NMAP_OUT=$(mktemp)
ARP_OUT=$(mktemp)
NBTS_OUT=$(mktemp)
IPLIST_TMP=$(mktemp)

echo "[*] Using temp files:"
echo "    NMAP_OUT = $NMAP_OUT"
echo "    ARP_OUT  = $ARP_OUT"
echo "    NBTS_OUT = $NBTS_OUT"

echo "[*] Running nmap..."
nmap -sn "$SUBNET" > "$NMAP_OUT"

echo "[*] Running arp-scan..."
(cd /tmp && arp-scan --interface="$IFACE" --localnet > "$ARP_OUT")

echo "[*] Running nbtscan on IPs without hostnames..."
awk '
    /^Nmap scan report for/ {
        if ($6 ~ /^\(/) {
            ip = $6
            gsub(/\(|\)/, "", ip)
        } else {
            ip = $5
        }
        print ip
    }
' "$NMAP_OUT" | sort -u > "$IPLIST_TMP"

if [[ -s "$IPLIST_TMP" ]]; then
    nbtscan -f "$IPLIST_TMP" > "$NBTS_OUT"
fi

declare -A vendor_map
while read -r ip mac vendor; do
    [[ "$ip" =~ ^[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+$ ]] || continue
    vendor_map["$ip"]="$vendor"
done < <(grep -E '^[0-9]+\.' "$ARP_OUT")

declare -A nbts_map
while read -r ip name _; do
    nbts_map["$ip"]="$name"
done < <(grep -E '^[0-9]+\.' "$NBTS_OUT")

{
    echo "# Autogenerated hosts file"
    awk '
        /^Nmap scan report for/ {
            if ($6 ~ /^\(/) {
                host = ""
                ip = $6
            } else {
                host = $5
                ip = $6
            }
            gsub(/\(|\)/, "", ip)
            print ip, host
        }
    ' "$NMAP_OUT" | while read -r ip host; do
        if [[ -z "$host" || "$host" == "(Unknown)" ]]; then
            if [[ -n "${nbts_map[$ip]:-}" ]]; then
                host="${nbts_map[$ip]}"
            else
                avahi_name=$(avahi-resolve-address "$ip" 2>/dev/null | awk '{print $2}' || true)
                if [[ -n "$avahi_name" ]]; then
                    host="$avahi_name"
                elif [[ -n "${vendor_map[$ip]:-}" ]]; then
                    vendor_clean=$(echo "${vendor_map[$ip]}" | tr -dc '[:alnum:]')
                    host="${vendor_clean}-${ip##*.}"
                else
                    host="host-${ip##*.}"
                fi
            fi
        fi
        host="${host%%.*}"
        host="${host,,}"
        echo "$ip    $host"
    done
} > "$OUTPUT"

echo "[*] Reloading dnsmasq..."
if systemctl is-active --quiet dnsmasq; then
    systemctl reload dnsmasq
else
    echo "[!] dnsmasq is not active. Skipping reload."
fi

if [[ "$DEBUG_TMP" = false ]]; then
    rm -f "$NMAP_OUT" "$ARP_OUT" "$NBTS_OUT" "$IPLIST_TMP"
else
    echo "[!] Temp files NOT deleted:"
    echo "    $NMAP_OUT"
    echo "    $ARP_OUT"
    echo "    $NBTS_OUT"
    echo "    $IPLIST_TMP"
fi

echo "[âœ“] Hostname generation complete. Output written to $OUTPUT"
